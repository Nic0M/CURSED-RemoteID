import subprocess
import time
import os

# Get major and minor bash version e.g. 4.0
bash_version_output = subprocess.check_output(['bash', '--version']).decode('utf-8')
bash_version_lines = bash_version_output.splitlines()
bash_version = bash_version_lines[0]
bash_major_version = int(bash_version.split()[3].split('.')[0])

# Check if major version is greater or equal to 4
if bash_major_version >= 4:
    print("Bash version 4 or later is installed.")
else:
    print('Bash version is less than 4.')
    print('Exiting')
    exit(1)

# All WiFi channels to scan
all_wifi_channels = [1, 6, 11, 36, 40, 44, 48, 149, 153, 157, 161]

# MAC address of the network card adapter
MAC_addr = "00c0cab400dd"

long_interface_name = f"wlx{MAC_addr}"
short_interface_name = 'wlan1mon'

# Check if monitor interface exists
def check_interface(interface_name):
    try:
        subprocess.check_call(['iwconfig', interface_name])
    except subprocess.CalledProcessError:
        print(f"Interface {interface_name} does not exist.")
        exit(1)

check_interface(long_interface_name)
check_interface(short_interface_name)

# Ensure interface is started with short name
subprocess.run(['sudo', 'airmon-ng', 'start', long_interface_name, '1', 'airmon-ng', 'check', 'kill'])
subprocess.run(['sudo', 'airmon-ng', 'start', short_interface_name, '1', 'airmon-ng', 'check', 'kill'])

# Currently will overwrite file
subprocess.Popen(['tshark', '-i', short_interface_name, '-w', 'outfile.pcap', '-q'])

# Allow tshark to initialize file
time.sleep(5)

for channel in all_wifi_channels:
    print(f"Scanning channel: {channel}")
    subprocess.run(['sudo', 'airmon-ng', 'start', 'wlan1mon', str(channel)])
    time.sleep(5/11)

# Kill tshark process
subprocess.run(['pkill', 'tshark'])
